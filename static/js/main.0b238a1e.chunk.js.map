{"version":3,"sources":["Components/contactList/ContactList.js","Components/contatctForm/ContactForm.js","Components/filter/Filter.js","Components/App.js","index.js"],"names":["ContactList","findContact","removeContact","map","contact","name","number","type","id","onClick","ContactForm","state","reset","setState","handleChange","e","target","value","handleSubmit","preventDefault","props","isThereContact","alert","addNewContact","onSubmit","this","onChange","pattern","title","required","Component","Filter","filter","App","contacts","newContact","prevState","uuidv4","toLowerCase","includes","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b238a1e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ContactList = ({ findContact, removeContact }) => {\r\n  return (\r\n    <ul>\r\n      {findContact().map(contact => {\r\n        return (\r\n          <li key={contact.id}>\r\n            <span>{contact.name}:</span>\r\n            <span>{contact.number}</span>\r\n            <button type=\"button\" id={contact.id} onClick={removeContact}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.props.isThereContact(this.state.name)) {\r\n      return alert(`${this.state.name} has been already in contact list`);\r\n    }\r\n    this.props.addNewContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number:\r\n          <input\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ onChange, filter }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name:\r\n      <input name=\"filter\" type=\"text\" value={filter} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './contactList/ContactList';\r\nimport ContactForm from './contatctForm/ContactForm';\r\nimport Filter from './filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    // name: '',\r\n    // number: '',\r\n\r\n    filter: '',\r\n  };\r\n\r\n  addNewContact = newContact => {\r\n    // e.preventDefault();\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, { ...newContact, id: uuidv4() }],\r\n      //   name: '',\r\n      //   number: '',\r\n    }));\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  removeContact = e => {\r\n    const id = e.target.id;\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  findContact = e => {\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  isThereContact = name =>\r\n    this.state.contacts.some(contact => contact.name === name);\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm\r\n          //   handleChange={this.handleChange}\r\n          addNewContact={this.addNewContact}\r\n          isThereContact={this.isThereContact}\r\n        />\r\n\r\n        {/* <form onSubmit={this.addNewContact}>\r\n          <label>\r\n            Name:\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Number:\r\n            <input\r\n              onChange={this.handleChange}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Add contact</button>\r\n        </form> */}\r\n\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter filter={this.state.filter} onChange={this.handleChange} />\r\n        {/* <label>\r\n          Find contacts by name:\r\n          <input\r\n            name=\"filter\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            value={this.state.filter}\r\n          />\r\n        </label> */}\r\n        <ContactList\r\n          findContact={this.findContact}\r\n          removeContact={this.removeContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}